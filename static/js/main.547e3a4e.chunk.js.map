{"version":3,"sources":["common/enums.ts","core/platforms/models.ts","common/utils.ts","core/platforms/TwinoPlatform.ts","core/platforms/Platform.ts","core/platforms/ZonkyPlatform.ts","core/platforms/MintosPlatform.ts","core/platforms/utils.ts","components/DragAndDropFilesInput.tsx","components/platformSpecific/MintosSpecificHeaderView.tsx","components/platformSpecific/TwinoSpecificHeaderView.tsx","components/platformSpecific/ZonkySpecificHeaderView.tsx","components/PortfolioHeaderView.tsx","components/PlatformHeaderView.tsx","components/ResultTable.tsx","components/PlatformView.tsx","components/ForexRateInput.tsx","components/PortfolioView.tsx","components/PlatformsTabMenuView.tsx","components/UploadFilesInput.tsx","components/App.tsx","index.tsx"],"names":["FileTypes","Currency","SupportedPlatformTypes","loadSelectedFile","file","cb","reader","FileReader","onerror","ex","console","log","onload","e","name","readAsArrayBuffer","getFirstWorkSheetFromRawFile","rawFile","content","Uint8Array","workbook","xlsx","read","type","Sheets","SheetNames","TwinoASFileColumnHeadersDefs","Platform","currency","platform","monthlyResults","transactionLog","platformResult","portfolioResult","monthlyPortfolioResults","processingMonth","moment","this","getTransaction","transaction","dateTransaction","processingDate","isAfter","dateArray","toArray","newMonthMoment","unshift","month","result","getNewBaseResultFactory","Object","entries","transactionType","value","key","add","totals","deposit","Dinero","extraReceived","feesPaid","interestReceived","principalReceived","withdrawal","getPlatformResult","amount","map","monthPortfolioResult","ZonkyASFileColumnHeadersDefs","TwinoPlatform","EUR","firstSheet","utils","sheet_to_json","header","dataColumnHeader","raw","blankrows","defval","range","reverse","transactionRecord","Date","getNewTransactionFactory","dataAmount","ProcessingAmount","amountPrecision","indexOf","length","intAmount","parseInt","replace","TransactionType","Math","abs","precision","PaymentType","penaltyReceived","fullFilename","startsWith","platformFilenameSubstring","endsWith","platformFileType","TWINO","XLSX","TransactionId","LoanId","MintosASFileColumnHeadersDefs","ZonkyPlatform","CZK","ASFileColumnHeaders","headerNotFound","rowNumber","splice","Error","getAmount","plaformFeePaid","secondaryMarketFeePaid","getInterestReceived","InterestReceived","multiply","getPrincipalReceived","PrincipalReceived","penalty","subtract","isZero","rawAmount","rawPrincipalReceived","principalReceivedPrecision","principalReceivedInt","includes","getNewPortfolioResultFactory","sumTwoPortfolioResultsWithOptionalForexConversion","data","target","forexRate","targetCurrency","getCurrency","tmp","getPrecision","ZONKY","Direction","MintosPlatform","parseFloat","Turnover","toString","Details","referalReceived","cashbackReceived","currencyExchangeFeePaid","toLowerCase","incomingCurrencyExchange","outgoingCurrencyExchange","MINTOS","Balance","DragAndDropFilesInput","event","filename","ReactGA","category","action","props","onRawFileUploaded","stopPropagation","preventDefault","dataTransfer","dropEffect","files","onLoadHandler","bind","dropZoneText","uploadEnabled","id","onDragOver","handleDragOver","onDrop","handleFileSelect","React","Component","MintosSpecificHeaderView","campaignRewards","toFormat","TwinoSpecificHeaderView","ZonkySpecificHeaderView","PortfolioHeaderView","toolTipDeposit","toolTipWithdrawal","toolTipPrincipalReceived","toolTipInterestReceived","toolTipFeesPaid","toolTipExtraReceived","tooltips","Tooltip","title","placement","fontSize","style","color","PlatformHeaderView","platformSpecificHeader","platformData","getPortfolioResult","portfolioResultTooltips","Grid","container","item","xs","ResultTable","Table","size","aria-label","TableHead","columnNames","index","TableCell","align","variant","TableRow","renderTableHeader","TableBody","hover","component","scope","width","format","renderTableData","PlatformView","getMonthlyPortfolioResults","useStyles","makeStyles","theme","createStyles","display","flexWrap","textField","marginLeft","spacing","marginRight","button","margin","input","ForexRateInput","useState","forexRateInputError","setForexRateInputError","setForexRate","classes","className","noValidate","autoComplete","TextField","error","helperText","onChange","Button","onClick","Number","isNaN","setForexRateValue","PortfolioView","portfolioHeader","portfolioResultTable","forexRateInput","portfolioPlatforms","portfolioCurrency","isCurrencyConversionNeeded","rowToAdd","indexInRowToAdd","indexToMontlyResults","resultMonth","monthDataToAdd","isSame","clone","isBefore","push","getPortfolioResultWithOptionalForexConversion","undefined","TabPanel","children","other","Typography","role","hidden","aria-labelledby","Box","p","a11yProps","tabEnabled","fontWeight","textTransform","tabDisabled","PlatformsTabMenuView","tabs","tabIndexValue","setTabIndexValue","useEffect","focus","platformViews","availablePlatforms","keys","zonkyEnabled","mintosEnabled","twinoEnabled","Paper","square","Tabs","newTabIndexValue","Tab","label","disabled","paddingTop","UploadFilesInput","multiple","onFileInputChange","App","state","newRawFiles","processNewRawFile","isPlatformFileValid","detectPlatform","parseASFile","processTransactions","setState","prevState","slice","setTimeout","statementsInfo","rel","href","height","viewBox","fill","position","top","border","right","zIndex","aria-hidden","d","transformOrigin","dangerouslySetInnerHTML","__html","AppBar","Toolbar","padding","rawfile","handleUploadedRawFile","initialize","pageview","window","location","pathname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.547e3a4e.chunk.js","sourcesContent":["export enum FileTypes {\n  XLSX = '.xlsx',\n  XLS = '.xls',\n  CSV = '.csv',\n  PDF = '.pdf'\n  // RAW_TEXT = 'raw_text'\n}\n\nexport enum Currency {\n  CZK = 'CZK',\n  EUR = 'EUR'\n}\n","import { Moment } from 'moment';\n\nimport {\n  IMintosDeposit,\n  IMintosExtraReceived,\n  IMintosFeesPaid,\n  IMintosInterestReceived,\n  IMintosWithdrawal,\n  MintosPlatform\n} from './MintosPlatform';\nimport { TwinoPlatform } from './TwinoPlatform';\nimport { IZonkyFeesPaid, IZonkyInterestReceived, ZonkyPlatform } from './ZonkyPlatform';\n\nexport type SupportedPlatform = MintosPlatform | TwinoPlatform | ZonkyPlatform;\n\nexport enum SupportedPlatformTypes {\n  MINTOS = 'mintos',\n  TWINO = 'twino',\n  ZONKY = 'zonky'\n}\n\nexport interface IPortfolioResult {\n  deposit: Dinero.Dinero;\n  withdrawal: Dinero.Dinero;\n  principalReceived: Dinero.Dinero;\n  interestReceived: Dinero.Dinero;\n  extraReceived: Dinero.Dinero;\n  feesPaid: Dinero.Dinero;\n}\n\nexport interface IOneMonthPortfolioResult {\n  month: Moment;\n  result: IPortfolioResult;\n}\n\nexport interface IGeneralDeposit {\n  deposit?: Dinero.Dinero;\n}\n\nexport interface IGeneralWithdrawal {\n  withdrawal?: Dinero.Dinero;\n}\n\nexport interface IBaseResult<ExtraReceived, InterestReceived, FeePaid, Deposit, Withdrawal> {\n  deposit: Deposit;\n  withdrawal: Withdrawal;\n  principalReceived: {\n    principalReceived?: Dinero.Dinero;\n  };\n  interestReceived: InterestReceived;\n  extraReceived: ExtraReceived;\n  feesPaid: FeePaid;\n}\n\nexport interface IOneMonthPlatformResult<ExtraReceived, InterestReceived, FeePaid, Deposit, Withdrawal> {\n  month: Moment;\n  result: IBaseResult<ExtraReceived, InterestReceived, FeePaid, Deposit, Withdrawal>;\n}\n\nexport interface ITransaction<ExtraReceived, InterestReceived, FeePaid, Deposit, Withdrawal> {\n  processingDate: Moment;\n  result: IBaseResult<ExtraReceived, InterestReceived, FeePaid, Deposit, Withdrawal>;\n}\n\nexport type IDepositOptions = IGeneralDeposit | IMintosDeposit;\nexport type IExtraReceivedOptions = IMintosExtraReceived | {};\nexport type IFeePaidOptions = IMintosFeesPaid | IZonkyFeesPaid;\nexport type IInterestReceivedOptions = IMintosInterestReceived | IZonkyInterestReceived;\n\nexport type IWithdrawalOptions = IGeneralWithdrawal | IMintosWithdrawal;\n","import xlsx from 'xlsx';\n\nexport function loadSelectedFile(file: File, cb: (event: any, filename: string) => void) {\n  const reader = new FileReader();\n  reader.onerror = ex => {\n    // FIXME\n    console.log(ex);\n  };\n  reader.onload = (e: any) => {\n    cb(e, file.name);\n  };\n  reader.readAsArrayBuffer(file);\n}\n\nexport function getFirstWorkSheetFromRawFile(rawFile: ArrayBuffer): xlsx.WorkSheet {\n  const content = new Uint8Array(rawFile);\n  const workbook = xlsx.read(content, { type: 'array' });\n  const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n  return firstSheet;\n}\n","import Dinero from 'dinero.js';\nimport moment from 'moment';\nimport xlsx from 'xlsx';\n\nimport { Currency, FileTypes } from '../../common/enums';\nimport { getFirstWorkSheetFromRawFile } from '../../common/utils';\n\nimport { IGeneralDeposit, IGeneralWithdrawal, ITransaction, SupportedPlatformTypes } from './models';\nimport { Platform } from './Platform';\nimport { getNewTransactionFactory } from './utils';\n\nenum TwinoASFileColumnHeadersDefs {\n  Date = 'Processing Date',\n  TransactionId = 'Transaction ID',\n  TransactionType = 'Type',\n  PaymentType = 'Description',\n  LoanId = 'Loan Number',\n  ProcessingAmount = 'Amount, EUR'\n}\n\nexport interface ITwinoInterestReceived {\n  interestReceived?: Dinero.Dinero;\n  penaltyReceived?: Dinero.Dinero;\n}\n\nexport class TwinoPlatform extends Platform {\n  public static readonly platform = SupportedPlatformTypes.TWINO;\n\n  public static isPlatformFileValid(fullFilename: string): boolean {\n    return (\n      fullFilename.startsWith(TwinoPlatform.platformFilenameSubstring) && fullFilename.endsWith(TwinoPlatform.platformFileType)\n    );\n  }\n\n  private static readonly platformFilenameSubstring = 'account_statement';\n  private static readonly platformFileType = FileTypes.XLSX;\n  private static readonly dataColumnHeader = [\n    TwinoASFileColumnHeadersDefs.Date,\n    TwinoASFileColumnHeadersDefs.TransactionId,\n    TwinoASFileColumnHeadersDefs.TransactionType,\n    TwinoASFileColumnHeadersDefs.PaymentType,\n    TwinoASFileColumnHeadersDefs.LoanId,\n    TwinoASFileColumnHeadersDefs.ProcessingAmount\n  ];\n\n  public readonly platform = TwinoPlatform.platform;\n  public currency = Currency.EUR;\n\n  public parseASFile(rawFile: ArrayBuffer) {\n    const firstSheet = getFirstWorkSheetFromRawFile(rawFile);\n\n    const transactionLog: any[] = xlsx.utils.sheet_to_json(firstSheet, {\n      header: TwinoPlatform.dataColumnHeader,\n      raw: false,\n      blankrows: false,\n      defval: 0.0,\n      range: 3\n    });\n    this.transactionLog = transactionLog.reverse();\n  }\n\n  protected *getTransaction(): IterableIterator<\n    ITransaction<{}, ITwinoInterestReceived, {}, IGeneralDeposit, IGeneralWithdrawal>\n  > {\n    for (const transactionRecord of this.transactionLog) {\n      const processingDate = moment(transactionRecord[TwinoASFileColumnHeadersDefs.Date], 'MM/DD/YY HH:mm');\n      const transaction = getNewTransactionFactory(processingDate);\n\n      const dataAmount = transactionRecord[TwinoASFileColumnHeadersDefs.ProcessingAmount];\n\n      let amountPrecision = 0;\n      if (dataAmount.indexOf('.') >= 0) {\n        amountPrecision = dataAmount.length - (dataAmount.indexOf('.') + 1);\n      }\n      const intAmount = parseInt(transactionRecord[TwinoASFileColumnHeadersDefs.ProcessingAmount].replace(/\\./g, ''), 10);\n\n      switch (transactionRecord[TwinoASFileColumnHeadersDefs.TransactionType]) {\n        case 'FUNDING':\n          if (intAmount > 0) {\n            transaction.result.deposit.deposit = Dinero({\n              amount: Math.abs(intAmount),\n              precision: amountPrecision,\n              currency: this.currency\n            });\n          } else if (intAmount < 0) {\n            transaction.result.withdrawal.withdrawal = Dinero({\n              amount: Math.abs(intAmount),\n              precision: amountPrecision,\n              currency: this.currency\n            });\n          }\n          break;\n      }\n\n      switch (transactionRecord[TwinoASFileColumnHeadersDefs.PaymentType]) {\n        case 'PENALTY':\n          transaction.result.interestReceived.penaltyReceived = Dinero({\n            amount: Math.abs(intAmount),\n            precision: amountPrecision,\n            currency: this.currency\n          });\n          break;\n        case 'INTEREST':\n          transaction.result.interestReceived.interestReceived = Dinero({\n            amount: intAmount,\n            precision: amountPrecision,\n            currency: this.currency\n          });\n          break;\n      }\n\n      yield transaction;\n    }\n  }\n\n  protected getNewBaseResultFactory() {\n    return {\n      deposit: {\n        deposit: Dinero({ currency: this.currency })\n      },\n      extraReceived: {},\n      feesPaid: {},\n      interestReceived: {\n        interestReceived: Dinero({ currency: this.currency }),\n        penaltyReceived: Dinero({ currency: this.currency })\n      },\n      principalReceived: {},\n      withdrawal: {\n        withdrawal: Dinero({ currency: this.currency })\n      }\n    };\n  }\n}\n","import Dinero from 'dinero.js';\nimport moment from 'moment';\n\nimport { Currency } from '../../common/enums';\n\nimport {\n  IBaseResult,\n  IOneMonthPlatformResult,\n  IOneMonthPortfolioResult,\n  IPortfolioResult,\n  ITransaction,\n  SupportedPlatformTypes\n} from './models';\n\nexport abstract class Platform {\n  public abstract currency: Currency;\n  public abstract readonly platform: SupportedPlatformTypes;\n\n  public monthlyResults: Array<IOneMonthPlatformResult<any, any, any, any, any>> = [];\n\n  protected transactionLog: any[] = [];\n\n  private platformResult?: IBaseResult<any, any, any, any, any>;\n  private portfolioResult?: IPortfolioResult;\n\n  private monthlyPortfolioResults?: IOneMonthPortfolioResult[];\n\n  public processTransactions() {\n    let processingMonth = moment(0);\n\n    for (const transaction of this.getTransaction()) {\n      const dateTransaction = transaction.processingDate;\n\n      if (dateTransaction.isAfter(processingMonth, 'month')) {\n        const dateArray = dateTransaction.toArray();\n        const newMonthMoment = moment(`${dateArray[0]}-${dateArray[1] + 1}-01`, 'YYYY-MM-DD');\n\n        this.monthlyResults.unshift({\n          month: newMonthMoment,\n          result: this.getNewBaseResultFactory()\n        });\n        processingMonth = newMonthMoment;\n      }\n\n      for (const [transactionType, value] of Object.entries<any>(transaction.result)) {\n        for (const [key, result] of Object.entries<Dinero.Dinero>(value)) {\n          // @ts-ignore TODO\n          this.monthlyResults[0].result[transactionType][key] = this.monthlyResults[0].result[transactionType][key].add(result);\n        }\n      }\n    }\n  }\n\n  public getPlatformResult(): IBaseResult<any, any, any, any, any> {\n    if (!this.platformResult) {\n      const totals = this.getNewBaseResultFactory();\n      for (const month of this.monthlyResults) {\n        for (const [transactionType, value] of Object.entries<any>(month.result)) {\n          for (const [key, result] of Object.entries<Dinero.Dinero>(value)) {\n            // @ts-ignore\n            totals[transactionType][key] = totals[transactionType][key].add(result);\n          }\n        }\n      }\n      this.platformResult = totals;\n    }\n    return this.platformResult;\n  }\n\n  public getPortfolioResult(): IPortfolioResult {\n    if (!this.portfolioResult) {\n      const totals: IPortfolioResult = {\n        deposit: Dinero({ currency: this.currency }),\n        extraReceived: Dinero({ currency: this.currency }),\n        feesPaid: Dinero({ currency: this.currency }),\n        interestReceived: Dinero({ currency: this.currency }),\n        principalReceived: Dinero({ currency: this.currency }),\n        withdrawal: Dinero({ currency: this.currency })\n      };\n\n      const platformResult = this.getPlatformResult();\n\n      for (const [transactionType, value] of Object.entries(platformResult)) {\n        for (const [, amount] of Object.entries<Dinero.Dinero>(value)) {\n          // @ts-ignore\n          totals[transactionType] = totals[transactionType].add(amount);\n        }\n      }\n\n      this.portfolioResult = totals;\n    }\n\n    return this.portfolioResult;\n  }\n\n  public getMonthlyPortfolioResults(): IOneMonthPortfolioResult[] {\n    if (!this.monthlyPortfolioResults) {\n      this.monthlyPortfolioResults = this.monthlyResults.map((month: IOneMonthPlatformResult<any, any, any, any, any>) => {\n        const monthPortfolioResult: IOneMonthPortfolioResult = {\n          month: month.month,\n          result: {\n            deposit: Dinero({ currency: this.currency }),\n            extraReceived: Dinero({ currency: this.currency }),\n            feesPaid: Dinero({ currency: this.currency }),\n            interestReceived: Dinero({ currency: this.currency }),\n            principalReceived: Dinero({ currency: this.currency }),\n            withdrawal: Dinero({ currency: this.currency })\n          }\n        };\n\n        for (const [transactionType, key] of Object.entries(month.result)) {\n          for (const [, value] of Object.entries<Dinero.Dinero>(key)) {\n            // @ts-ignore TODO\n            if (monthPortfolioResult.result[transactionType]) {\n              // @ts-ignore TODO\n              monthPortfolioResult.result[transactionType] = monthPortfolioResult.result[transactionType].add(value);\n            } else {\n              // @ts-ignore TODO\n              monthPortfolioResult.result[transactionType] = value;\n            }\n          }\n        }\n\n        return monthPortfolioResult;\n      });\n    }\n\n    return this.monthlyPortfolioResults;\n  }\n\n  protected abstract parseASFile(rawFile: ArrayBuffer): void;\n  protected abstract getTransaction(): IterableIterator<ITransaction<any, any, any, any, any>>;\n  protected abstract getNewBaseResultFactory(): IBaseResult<any, any, any, any, any>;\n}\n","import Dinero from 'dinero.js';\nimport moment from 'moment';\nimport xlsx from 'xlsx';\n\nimport { Currency, FileTypes } from '../../common/enums';\nimport { getFirstWorkSheetFromRawFile } from '../../common/utils';\n\nimport { IGeneralDeposit, IGeneralWithdrawal, ITransaction, SupportedPlatformTypes } from './models';\nimport { Platform } from './Platform';\nimport { getNewTransactionFactory } from './utils';\n\nenum ZonkyASFileColumnHeadersDefs {\n  Date = 'Datum',\n  Direction = 'Příjem / Výdaj',\n  TransactionType = 'Typ transakce',\n  ProcessingAmount = 'Částka',\n  InterestReceived = 'Jistina',\n  PrincipalReceived = 'Úrok'\n}\n\nexport interface IZonkyFeesPaid {\n  plaformFeePaid?: Dinero.Dinero;\n  secondaryMarketFeePaid?: Dinero.Dinero;\n}\nexport interface IZonkyInterestReceived {\n  interestReceived?: Dinero.Dinero;\n  penaltyReceived?: Dinero.Dinero;\n}\n\nexport class ZonkyPlatform extends Platform {\n  public static readonly platform = SupportedPlatformTypes.ZONKY;\n\n  public static isPlatformFileValid(fullFilename: string): boolean {\n    return (\n      fullFilename.includes(ZonkyPlatform.platformFilenameSubstring) && fullFilename.endsWith(ZonkyPlatform.platformFileType)\n    );\n  }\n\n  private static readonly platformFilenameSubstring = 'transakce-';\n  private static readonly platformFileType = FileTypes.XLSX;\n  private static readonly ASFileColumnHeaders = [\n    ZonkyASFileColumnHeadersDefs.Date,\n    ZonkyASFileColumnHeadersDefs.Direction,\n    ZonkyASFileColumnHeadersDefs.TransactionType,\n    ZonkyASFileColumnHeadersDefs.ProcessingAmount,\n    ZonkyASFileColumnHeadersDefs.PrincipalReceived,\n    ZonkyASFileColumnHeadersDefs.InterestReceived\n  ];\n\n  public readonly platform = ZonkyPlatform.platform;\n  public currency = Currency.CZK;\n\n  public parseASFile(rawFile: ArrayBuffer) {\n    const firstSheet = getFirstWorkSheetFromRawFile(rawFile);\n\n    const transactionLog: any[] = xlsx.utils.sheet_to_json(firstSheet, {\n      header: ZonkyPlatform.ASFileColumnHeaders,\n      raw: false,\n      blankrows: false,\n      defval: 0.0,\n      range: 4\n    });\n\n    let headerNotFound = true;\n    for (let rowNumber = 0; rowNumber < transactionLog.length; rowNumber++) {\n      if (transactionLog[rowNumber][ZonkyASFileColumnHeadersDefs.Date] === ZonkyASFileColumnHeadersDefs.Date) {\n        transactionLog.splice(0, rowNumber + 1);\n        headerNotFound = false;\n        break;\n      }\n    }\n    if (headerNotFound) {\n      throw Error('Data header not found');\n    }\n    this.transactionLog = transactionLog;\n  }\n\n  public *getTransaction(): IterableIterator<\n    ITransaction<{}, IZonkyInterestReceived, IZonkyFeesPaid, IGeneralDeposit, IGeneralWithdrawal>\n  > {\n    for (const transactionRecord of this.transactionLog) {\n      const processingDate = moment(transactionRecord[ZonkyASFileColumnHeadersDefs.Date], 'DD.MM.YYYY');\n      const transaction = getNewTransactionFactory(processingDate);\n\n      const amount = this.getAmount(transactionRecord[ZonkyASFileColumnHeadersDefs.ProcessingAmount], Currency.CZK);\n\n      switch (transactionRecord[ZonkyASFileColumnHeadersDefs.TransactionType]) {\n        case 'Poplatek za investování':\n          transaction.result.feesPaid.plaformFeePaid = amount;\n          break;\n        case 'Nabití vaší peněženky':\n          transaction.result.deposit.deposit = amount;\n          break;\n        case 'Výběr z peněženky na váš účet':\n          transaction.result.withdrawal.withdrawal = amount;\n          break;\n        case 'Poplatek za prodej na sekundárním trhu':\n          transaction.result.feesPaid.secondaryMarketFeePaid = amount;\n          break;\n        case 'Prodej na sekundárním trhu':\n          transaction.result.principalReceived.principalReceived = amount;\n          break;\n        case 'Vrácení platby':\n          transaction.result.interestReceived.interestReceived = this.getInterestReceived(\n            transactionRecord[ZonkyASFileColumnHeadersDefs.InterestReceived],\n            Currency.CZK\n          ).multiply(-1);\n          transaction.result.principalReceived.principalReceived = this.getPrincipalReceived(\n            transactionRecord[ZonkyASFileColumnHeadersDefs.PrincipalReceived],\n            Currency.CZK\n          ).multiply(-1);\n          break;\n\n        case 'Splátka půjčky':\n          transaction.result.interestReceived.interestReceived = this.getInterestReceived(\n            transactionRecord[ZonkyASFileColumnHeadersDefs.InterestReceived],\n            Currency.CZK\n          );\n          transaction.result.principalReceived.principalReceived = this.getPrincipalReceived(\n            transactionRecord[ZonkyASFileColumnHeadersDefs.PrincipalReceived],\n            Currency.CZK\n          );\n\n          const penalty = amount.subtract(\n            transaction.result.principalReceived.principalReceived.add(transaction.result.interestReceived.interestReceived)\n          );\n          if (!penalty.isZero()) {\n            transaction.result.interestReceived.penaltyReceived = penalty;\n          }\n\n          break;\n      }\n      yield transaction;\n    }\n  }\n\n  protected getNewBaseResultFactory() {\n    return {\n      deposit: { deposit: Dinero({ currency: this.currency }) },\n      extraReceived: {},\n      feesPaid: {\n        plaformFeePaid: Dinero({ currency: this.currency }),\n        secondaryMarketFeePaid: Dinero({ currency: this.currency })\n      },\n      interestReceived: {\n        interestReceived: Dinero({ currency: this.currency }),\n        penaltyReceived: Dinero({ currency: this.currency })\n      },\n      principalReceived: {\n        principalReceived: Dinero({ currency: this.currency })\n      },\n      withdrawal: { withdrawal: Dinero({ currency: this.currency }) }\n    };\n  }\n\n  private getAmount(rawAmount: string, currency: Currency): Dinero.Dinero {\n    const amountPrecision = rawAmount.length - (rawAmount.indexOf('.') + 1);\n    const intAmount = Math.abs(parseInt(rawAmount.replace(/,/g, '').replace(/\\./g, ''), 10));\n    return Dinero({\n      amount: intAmount,\n      precision: amountPrecision,\n      currency\n    });\n  }\n\n  private getPrincipalReceived(rawPrincipalReceived: string, currency: Currency): Dinero.Dinero {\n    const principalReceivedPrecision = rawPrincipalReceived.length - (rawPrincipalReceived.indexOf('.') + 1);\n    const principalReceivedInt = Math.abs(parseInt(rawPrincipalReceived.replace(/,/g, '').replace(/\\./g, ''), 10));\n    return Dinero({\n      amount: principalReceivedInt,\n      precision: principalReceivedPrecision,\n      currency\n    });\n  }\n\n  private getInterestReceived(rawPrincipalReceived: string, currency: Currency): Dinero.Dinero {\n    const principalReceivedPrecision = rawPrincipalReceived.length - (rawPrincipalReceived.indexOf('.') + 1);\n    const principalReceivedInt = Math.abs(parseInt(rawPrincipalReceived.replace(/,/g, '').replace(/\\./g, ''), 10));\n    return Dinero({\n      amount: principalReceivedInt,\n      precision: principalReceivedPrecision,\n      currency\n    });\n  }\n}\n","import Dinero from 'dinero.js';\nimport moment from 'moment';\nimport xlsx from 'xlsx';\n\nimport { Currency, FileTypes } from '../../common/enums';\nimport { getFirstWorkSheetFromRawFile } from '../../common/utils';\n\nimport { IGeneralDeposit, IGeneralWithdrawal, ITransaction, SupportedPlatformTypes } from './models';\nimport { Platform } from './Platform';\nimport { getNewTransactionFactory } from './utils';\n\nenum MintosASFileColumnHeadersDefs {\n  TransactionId = 'TransactionId',\n  Date = 'Date',\n  Details = 'Details',\n  Turnover = 'Turnover',\n  Balance = 'Balance',\n  Currency = 'Currency'\n}\n\nexport interface IMintosDeposit extends IGeneralDeposit {\n  incomingCurrencyExchange?: Dinero.Dinero;\n}\n\nexport interface IMintosExtraReceived {\n  referalReceived?: Dinero.Dinero;\n  cashbackReceived?: Dinero.Dinero;\n}\n\nexport interface IMintosFeesPaid {\n  currencyExchangeFeePaid?: Dinero.Dinero;\n  secondaryMarketFeePaid?: Dinero.Dinero;\n}\n\nexport interface IMintosInterestReceived {\n  interestReceived?: Dinero.Dinero;\n  penaltyReceived?: Dinero.Dinero;\n}\n\nexport interface IMintosWithdrawal extends IGeneralWithdrawal {\n  outgoingCurrencyExchange?: Dinero.Dinero;\n}\n\nexport class MintosPlatform extends Platform {\n  public static readonly platform = SupportedPlatformTypes.MINTOS;\n  public static isPlatformFileValid(fullFilename: string): boolean {\n    return (\n      fullFilename.includes(MintosPlatform.platformFilenameSubstring) && fullFilename.endsWith(MintosPlatform.platformFileType)\n    );\n  }\n  private static readonly platformFilenameSubstring = 'account-statement';\n  private static readonly platformFileType = FileTypes.XLSX;\n  private static readonly ASFileColumnHeaders = [\n    MintosASFileColumnHeadersDefs.TransactionId,\n    MintosASFileColumnHeadersDefs.Date,\n    MintosASFileColumnHeadersDefs.Details,\n    MintosASFileColumnHeadersDefs.Turnover,\n    MintosASFileColumnHeadersDefs.Balance,\n    MintosASFileColumnHeadersDefs.Currency\n  ];\n\n  public readonly platform = MintosPlatform.platform;\n  public currency = Currency.EUR;\n\n  public parseASFile(rawFile: ArrayBuffer) {\n    const firstSheet = getFirstWorkSheetFromRawFile(rawFile);\n\n    const transactionLog: any[] = xlsx.utils.sheet_to_json(firstSheet, {\n      header: MintosPlatform.ASFileColumnHeaders,\n      raw: false,\n      blankrows: false,\n      defval: 0.0,\n      range: 1\n    });\n    this.transactionLog = transactionLog;\n  }\n\n  protected *getTransaction(): IterableIterator<\n    ITransaction<IMintosExtraReceived, {}, IMintosFeesPaid, IMintosDeposit, IMintosWithdrawal>\n  > {\n    for (const transactionRecord of this.transactionLog) {\n      const processingDate = moment(transactionRecord[MintosASFileColumnHeadersDefs.Date], 'YYYY-MM-DD HH:mm:ss');\n      const transaction = getNewTransactionFactory(processingDate);\n\n      const currency = transactionRecord[MintosASFileColumnHeadersDefs.Currency];\n      const rawAmount = parseFloat(transactionRecord[MintosASFileColumnHeadersDefs.Turnover]).toString();\n\n      const amount = this.getAmount(rawAmount, currency);\n\n      // ENGLIGH VERSION OF THE EXPORT\n      switch (transactionRecord[MintosASFileColumnHeadersDefs.Details]) {\n        case 'Refer a friend bonus':\n          transaction.result.extraReceived.referalReceived = amount;\n          break;\n        case 'Cashback bonus':\n          transaction.result.extraReceived.cashbackReceived = amount;\n          break;\n        case 'Deposits':\n        case 'Incoming client payment':\n          transaction.result.deposit.deposit = amount;\n          break;\n        case 'Withdrawals':\n          transaction.result.withdrawal.withdrawal = amount;\n          break;\n        case 'Currency exchange fee':\n        case 'FX commission':\n          transaction.result.feesPaid.currencyExchangeFeePaid = amount;\n          break;\n      }\n\n      if (transactionRecord[MintosASFileColumnHeadersDefs.Details].toLowerCase().indexOf('interest income') >= 0) {\n        transaction.result.interestReceived.interestReceived = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Secondary market fee')) {\n        transaction.result.feesPaid.secondaryMarketFeePaid = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Late payment fee income')) {\n        transaction.result.interestReceived.penaltyReceived = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Incoming currency exchange transaction')) {\n        transaction.result.deposit.incomingCurrencyExchange = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Outgoing currency exchange transaction')) {\n        transaction.result.withdrawal.outgoingCurrencyExchange = amount;\n      } else if (\n        transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Discount/premium for secondary market transaction')\n      ) {\n        // TODO\n      }\n\n      // Version since 11/2019\n      if (transactionRecord[MintosASFileColumnHeadersDefs.Details].toLowerCase().indexOf('interest received') >= 0) {\n        transaction.result.interestReceived.interestReceived = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].toLowerCase().indexOf('secondary market fee') >= 0) {\n        transaction.result.feesPaid.secondaryMarketFeePaid = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].toLowerCase().indexOf('late fees received') >= 0) {\n        transaction.result.interestReceived.penaltyReceived = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Incoming currency exchange transaction')) {\n        transaction.result.deposit.incomingCurrencyExchange = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Outgoing currency exchange transaction')) {\n        transaction.result.withdrawal.outgoingCurrencyExchange = amount;\n      } else if (\n        transactionRecord[MintosASFileColumnHeadersDefs.Details]\n          .toLowerCase()\n          .indexOf('discount/premium for secondary market transaction') >= 0\n      ) {\n        // TODO\n      }\n\n      // CZECH VERSION OF THE EXPORT\n      switch (transactionRecord[MintosASFileColumnHeadersDefs.Details]) {\n        case 'Bonus za doporučení příteli':\n          transaction.result.extraReceived.referalReceived = amount;\n          break;\n        case 'Cashback bonus':\n          transaction.result.extraReceived.cashbackReceived = amount;\n          break;\n        case 'Vklady':\n          transaction.result.deposit.deposit = amount;\n          break;\n        case 'Výběr':\n          transaction.result.withdrawal.withdrawal = amount;\n          break;\n        case 'Poplatek směnárny':\n          transaction.result.feesPaid.currencyExchangeFeePaid = amount;\n          break;\n      }\n\n      if (transactionRecord[MintosASFileColumnHeadersDefs.Details].toLowerCase().indexOf('úrok') >= 0) {\n        transaction.result.interestReceived.interestReceived = amount;\n      } else if (\n        transactionRecord[MintosASFileColumnHeadersDefs.Details]\n          .toLowerCase()\n          .indexOf('poplatek za obchod na sekundárním trhu') >= 0\n      ) {\n        transaction.result.feesPaid.secondaryMarketFeePaid = amount;\n      } else if (\n        transactionRecord[MintosASFileColumnHeadersDefs.Details].toLowerCase().indexOf('obdržené poplatky z prodlení') >= 0\n      ) {\n        transaction.result.interestReceived.penaltyReceived = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Příchozí směnná transakce')) {\n        transaction.result.deposit.incomingCurrencyExchange = amount;\n      } else if (transactionRecord[MintosASFileColumnHeadersDefs.Details].startsWith('Odchozí směnná transakce')) {\n        transaction.result.withdrawal.outgoingCurrencyExchange = amount;\n      } else if (\n        transactionRecord[MintosASFileColumnHeadersDefs.Details]\n          .toLowerCase()\n          .indexOf('sleva/přirážka na transakce na sekundárním trhu') >= 0\n      ) {\n        // TODO\n      }\n\n      yield transaction;\n    }\n  }\n\n  protected getNewBaseResultFactory() {\n    return {\n      deposit: {\n        deposit: Dinero({ currency: this.currency }),\n        incomingCurrencyExchange: Dinero({ currency: this.currency })\n      },\n      extraReceived: {\n        cashbackReceived: Dinero({ currency: this.currency }),\n        referalReceived: Dinero({ currency: this.currency })\n      },\n      feesPaid: {\n        currencyExchangeFeePaid: Dinero({ currency: this.currency }),\n        secondaryMarketFeePaid: Dinero({ currency: this.currency })\n      },\n      interestReceived: {\n        interestReceived: Dinero({ currency: this.currency }),\n        penaltyReceived: Dinero({ currency: this.currency })\n      },\n      principalReceived: {},\n      withdrawal: {\n        withdrawal: Dinero({ currency: this.currency }),\n        outgoingCurrencyExchange: Dinero({ currency: this.currency })\n      }\n    };\n  }\n\n  private getAmount(rawAmount: string, currency: Currency): Dinero.Dinero {\n    let amountPrecision = 0;\n    if (rawAmount.indexOf('.') >= 0) {\n      amountPrecision = rawAmount.length - (rawAmount.indexOf('.') + 1);\n    }\n    const intAmount = Math.abs(parseInt(rawAmount.replace(/\\./g, ''), 10));\n    return Dinero({\n      amount: intAmount,\n      precision: amountPrecision,\n      currency\n    });\n  }\n}\n","import Dinero from 'dinero.js';\nimport { Moment } from 'moment';\n\nimport { Currency } from '../../common/enums';\n\nimport { MintosPlatform } from './MintosPlatform';\nimport { IOneMonthPortfolioResult, IPortfolioResult, ITransaction, SupportedPlatformTypes } from './models';\nimport { TwinoPlatform } from './TwinoPlatform';\nimport { ZonkyPlatform } from './ZonkyPlatform';\n\nexport function detectPlatform(filename: string): SupportedPlatformTypes {\n  if (MintosPlatform.isPlatformFileValid(filename)) {\n    return MintosPlatform.platform;\n  } else if (TwinoPlatform.isPlatformFileValid(filename)) {\n    return TwinoPlatform.platform;\n  } else if (ZonkyPlatform.isPlatformFileValid(filename)) {\n    return ZonkyPlatform.platform;\n  } else {\n    throw new Error('unknown file');\n  }\n}\n\nexport function getNewTransactionFactory(processingDate: Moment): ITransaction<any, any, any, any, any> {\n  return {\n    processingDate,\n    result: {\n      deposit: {},\n      extraReceived: {},\n      feesPaid: {},\n      interestReceived: {},\n      principalReceived: {},\n      withdrawal: {}\n    }\n  };\n}\n\nexport function getNewPortfolioResultFactory(currency: Currency): IPortfolioResult {\n  return {\n    deposit: Dinero({ currency }),\n    extraReceived: Dinero({ currency }),\n    feesPaid: Dinero({ currency }),\n    interestReceived: Dinero({ currency }),\n    principalReceived: Dinero({ currency }),\n    withdrawal: Dinero({ currency })\n  };\n}\n\nexport function sumTwoPortfolioResultsWithOptionalForexConversion(\n  data: IPortfolioResult,\n  target: IPortfolioResult,\n  forexRate: number,\n  targetCurrency: Currency\n): void {\n  for (const [transactionType, amount] of Object.entries<any>(data)) {\n    let value = { ...amount };\n    if (forexRate) {\n      if (value.getCurrency() !== targetCurrency) {\n        const tmp = value.multiply(forexRate);\n        value = Dinero({ amount: tmp.getAmount(), currency: Currency.CZK, precision: tmp.getPrecision() });\n        // TODO FIX this hack somehow with:\n        // const rates = {\n        //     rates: {\n        //       CZK: 26.7\n        //     }\n        //   }\n        // converted = await amount.convert('CZK', {\n        //     endpoint: new Promise(resolve => resolve(rates))\n        //   })\n      }\n    }\n    // @ts-ignore\n    target[transactionType] = target[transactionType].add(value);\n  }\n}\n\nexport function getPortfolioResultWithOptionalForexConversion(\n  portfolioPlatforms: any,\n  portfolioCurrency: Currency,\n  forexRate: number\n): [IPortfolioResult, IOneMonthPortfolioResult[]] {\n  const portfolioResult = getNewPortfolioResultFactory(portfolioCurrency);\n  const monthlyPortfolioResults: IOneMonthPortfolioResult[] = [];\n\n  for (const platform of portfolioPlatforms) {\n    sumTwoPortfolioResultsWithOptionalForexConversion(platform.getPortfolioResult(), portfolioResult, forexRate, Currency.CZK);\n\n    const rowToAdd = platform.getMonthlyPortfolioResults();\n\n    let indexInRowToAdd = 0;\n    for (let indexToMontlyResults = 0; indexToMontlyResults < monthlyPortfolioResults.length; indexToMontlyResults++) {\n      const resultMonth = monthlyPortfolioResults[indexToMontlyResults];\n      if (indexInRowToAdd === rowToAdd.length) {\n        break;\n      }\n\n      const monthDataToAdd = rowToAdd[indexInRowToAdd];\n\n      /**\n       * NOTE: months are in descending order = later in time is ealier in monthly results\n       * 11-2019\n       * 10-2019\n       * 9-2019\n       */\n\n      if (monthDataToAdd.month.isSame(resultMonth.month, 'month')) {\n        // same month, so sum it\n        sumTwoPortfolioResultsWithOptionalForexConversion(\n          rowToAdd[indexInRowToAdd].result,\n          resultMonth.result,\n          forexRate,\n          Currency.CZK\n        );\n        indexInRowToAdd++;\n        continue;\n      }\n      if (monthDataToAdd.month.isAfter(resultMonth.month, 'month')) {\n        // isAfter = is later in time, but earlier in the monthly results, so prepend it in the list before resultMonth\n        const month = rowToAdd[indexInRowToAdd].month.clone();\n        const result = getNewPortfolioResultFactory(portfolioCurrency);\n\n        sumTwoPortfolioResultsWithOptionalForexConversion(rowToAdd[indexInRowToAdd].result, result, forexRate, Currency.CZK);\n\n        monthlyPortfolioResults.splice(indexToMontlyResults, 0, { month, result });\n        indexInRowToAdd++;\n        continue;\n      }\n      if (monthDataToAdd.month.isBefore(resultMonth.month, 'month')) {\n        // isBefore = is earlier in time, but later in the monthly results, so handle later\n      }\n    }\n\n    if (indexInRowToAdd !== rowToAdd.length) {\n      // there are no existing months to sum with, so just append all\n      while (indexInRowToAdd < rowToAdd.length) {\n        const month = rowToAdd[indexInRowToAdd].month.clone();\n        const result = getNewPortfolioResultFactory(portfolioCurrency);\n\n        sumTwoPortfolioResultsWithOptionalForexConversion(rowToAdd[indexInRowToAdd].result, result, forexRate, Currency.CZK);\n\n        monthlyPortfolioResults.push({ month, result });\n        indexInRowToAdd++;\n      }\n    }\n  }\n\n  return [portfolioResult, monthlyPortfolioResults];\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport { loadSelectedFile } from '../common/utils';\n\nimport { FileUploadInputProps } from './App';\nimport './DragAndDropFilesInput.css';\n\nclass DragAndDropFilesInput extends React.Component<FileUploadInputProps> {\n  public onLoadHandler(event: any, filename: string) {\n    ReactGA.event({\n      category: 'FileUpload',\n      action: 'Drag and Drop'\n    });\n    this.props.onRawFileUploaded(event.target.result, filename);\n  }\n\n  public handleDragOver(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n\n  public handleFileSelect(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const files = event.dataTransfer.files;\n\n    this.onLoadHandler = this.onLoadHandler.bind(this);\n    for (const file of files) {\n      loadSelectedFile(file, this.onLoadHandler);\n    }\n  }\n\n  public render() {\n    let dropZoneText;\n    if (this.props.uploadEnabled) {\n      dropZoneText = 'Přetáhněte soubory sem';\n    } else {\n      dropZoneText = 'Vyčkejte na zpracování souboru';\n    }\n    return (\n      <div\n        id=\"drop_zone\"\n        onDragOver={e => {\n          this.handleDragOver(e);\n        }}\n        onDrop={e => this.handleFileSelect(e)}\n      >\n        {dropZoneText}\n      </div>\n    );\n  }\n}\n\nexport default DragAndDropFilesInput;\n","import React from 'react';\n\nimport { PlatformResultProps } from '../PlatformHeaderView';\n\nconst MintosSpecificHeaderView = (props: PlatformResultProps) => {\n  const campaignRewards = props.platformResult.extraReceived.referalReceived.add(\n    props.platformResult.extraReceived.cashbackReceived\n  );\n  return (\n    <div>\n      <h3>Mintos - statistiky jako na webu pro kontrolu</h3>\n      <p>\n        Interest - úvodní stránka:\n        {props.platformResult.interestReceived.interestReceived.toFormat()}\n      </p>\n      <p>\n        Late Payment Fees - úvodní stránka:\n        {props.platformResult.interestReceived.penaltyReceived.toFormat()}\n      </p>\n      <p>\n        Service fees - úvodní stránka:\n        {props.platformResult.feesPaid.secondaryMarketFeePaid\n          .add(props.platformResult.feesPaid.currencyExchangeFeePaid)\n          .toFormat()}\n      </p>\n      <p>\n        Campaign Rewards:\n        {campaignRewards.toFormat()}\n      </p>\n      <p>\n        Deposit - stránka Account statement:\n        {props.platformResult.deposit.deposit!.add(campaignRewards).toFormat()}\n      </p>\n      <p>\n        Incoming Currency Exchange - stránka Account statement:\n        {props.platformResult.deposit.incomingCurrencyExchange.toFormat()}\n      </p>\n      <p>\n        Outgoing Currency Exchange - stránka Account statement:\n        {props.platformResult.withdrawal.outgoingCurrencyExchange.toFormat()}\n      </p>\n      <p>\n        Secondary Market Fees - stránka Account statement:\n        {props.platformResult.feesPaid.secondaryMarketFeePaid.toFormat()}\n      </p>\n      <p>\n        Currency Exchange Fee - stránka Account statement:\n        {props.platformResult.feesPaid.currencyExchangeFeePaid.toFormat()}\n      </p>\n    </div>\n  );\n};\n\nexport default MintosSpecificHeaderView;\n","import React from 'react';\n\nimport { PlatformResultProps } from '../PlatformHeaderView';\n\nconst TwinoSpecificHeaderView = (props: PlatformResultProps) => {\n  return (\n    <div>\n      <h3>Twino.eu - statistiky jako na webu pro kontrolu</h3>\n      <p>Vklady - úvodní stránka: {props.platformResult.deposit.deposit.toFormat()}</p>\n      <p>Výběry - úvodní stránka: {props.platformResult.withdrawal.withdrawal.toFormat()}</p>\n      <p>\n        Zisk - úvodní stránka:{' '}\n        {props.platformResult.interestReceived.interestReceived\n          .add(props.platformResult.interestReceived.penaltyReceived)\n          .toFormat()}\n      </p>\n    </div>\n  );\n};\n\nexport default TwinoSpecificHeaderView;\n","import React from 'react';\n\nimport { PlatformResultProps } from '../PlatformHeaderView';\n\nconst ZonkySpecificHeaderView = (props: PlatformResultProps) => {\n  return (\n    <div>\n      <h3>Zonky - statistiky jako na webu pro kontrolu</h3>\n      <p>\n        Vyděláno:\n        {props.platformResult.interestReceived.interestReceived\n          .add(props.platformResult.interestReceived.penaltyReceived)\n          .subtract(props.platformResult.feesPaid.plaformFeePaid)\n          .subtract(props.platformResult.feesPaid.secondaryMarketFeePaid)\n          .toFormat()}\n      </p>\n\n      <p>\n        Zaplaceno na poplatcích:\n        {props.platformResult.feesPaid.plaformFeePaid.add(props.platformResult.feesPaid.secondaryMarketFeePaid).toFormat()}\n      </p>\n\n      <p>\n        Úrok zaplacený:\n        {props.platformResult.interestReceived.interestReceived.toFormat()}\n      </p>\n      <p>\n        Pokuty:\n        {props.platformResult.interestReceived.penaltyReceived.toFormat()}\n      </p>\n    </div>\n  );\n};\n\nexport default ZonkySpecificHeaderView;\n","import Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport React from 'react';\n\nimport { IPortfolioResult } from '../core/platforms/models';\n\ntype PortfolioHeaderProps = {\n  portfolioResult: IPortfolioResult;\n  tooltips: {\n    deposit?: string;\n    withdrawal?: string;\n    principalReceived?: string;\n    interestReceived?: string;\n    extraReceived?: string;\n    feesPaid?: string;\n  };\n};\n\nconst PortfolioHeaderView = (props: PortfolioHeaderProps) => {\n  let toolTipDeposit;\n  let toolTipWithdrawal;\n  let toolTipPrincipalReceived;\n  let toolTipInterestReceived;\n  let toolTipFeesPaid;\n  let toolTipExtraReceived;\n\n  if (props.tooltips.deposit) {\n    toolTipDeposit = (\n      <Tooltip title={props.tooltips.deposit} placement=\"right\">\n        <HelpOutlineIcon fontSize=\"small\" style={{ color: 'secondary' }} />\n      </Tooltip>\n    );\n  }\n  if (props.tooltips.withdrawal) {\n    toolTipWithdrawal = (\n      <Tooltip title={props.tooltips.withdrawal} placement=\"right\">\n        <HelpOutlineIcon fontSize=\"small\" style={{ color: 'secondary' }} />\n      </Tooltip>\n    );\n  }\n  if (props.tooltips.principalReceived) {\n    toolTipPrincipalReceived = (\n      <Tooltip title={props.tooltips.principalReceived} placement=\"right\">\n        <HelpOutlineIcon fontSize=\"small\" style={{ color: 'secondary' }} />\n      </Tooltip>\n    );\n  }\n  if (props.tooltips.interestReceived) {\n    toolTipInterestReceived = (\n      <Tooltip title={props.tooltips.interestReceived} placement=\"right\">\n        <HelpOutlineIcon fontSize=\"small\" style={{ color: 'secondary' }} />\n      </Tooltip>\n    );\n  }\n  if (props.tooltips.feesPaid) {\n    toolTipFeesPaid = (\n      <Tooltip title={props.tooltips.feesPaid} placement=\"right\">\n        <HelpOutlineIcon fontSize=\"small\" style={{ color: 'secondary' }} />\n      </Tooltip>\n    );\n  }\n  if (props.tooltips.extraReceived) {\n    toolTipExtraReceived = (\n      <Tooltip title={props.tooltips.extraReceived} placement=\"right\">\n        <HelpOutlineIcon fontSize=\"small\" style={{ color: 'secondary' }} />\n      </Tooltip>\n    );\n  }\n  return (\n    <div>\n      <h3>Sjednocené P2Folio součty</h3>\n      <p>\n        Vklady:\n        {props.portfolioResult.deposit.toFormat()} {toolTipDeposit}\n      </p>\n      <p>\n        Výběry:\n        {props.portfolioResult.withdrawal.toFormat()} {toolTipWithdrawal}\n      </p>\n      <p>\n        Přijaté jistiny:\n        {props.portfolioResult.principalReceived!.toFormat()} {toolTipPrincipalReceived}\n      </p>\n      <p>\n        Zisk:\n        {props.portfolioResult.interestReceived!.toFormat()} {toolTipInterestReceived}\n      </p>\n      <p>\n        Zaplaceno na poplatcích:\n        {props.portfolioResult.feesPaid!.toFormat()} {toolTipFeesPaid}\n      </p>\n      <p>\n        Mimo investiční odměny:\n        {props.portfolioResult.extraReceived!.toFormat()} {toolTipExtraReceived}\n      </p>\n    </div>\n  );\n};\n\nexport default PortfolioHeaderView;\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nimport { MintosPlatform } from '../core/platforms/MintosPlatform';\nimport { IBaseResult } from '../core/platforms/models';\nimport { TwinoPlatform } from '../core/platforms/TwinoPlatform';\nimport { ZonkyPlatform } from '../core/platforms/ZonkyPlatform';\n\nimport MintosSpecificHeaderView from './platformSpecific/MintosSpecificHeaderView';\nimport TwinoSpecificHeaderView from './platformSpecific/TwinoSpecificHeaderView';\nimport ZonkySpecificHeaderView from './platformSpecific/ZonkySpecificHeaderView';\nimport { PlatformDataProps } from './PlatformView';\nimport PortfolioHeaderView from './PortfolioHeaderView';\n\nexport type PlatformResultProps = {\n  platformResult: IBaseResult<any, any, any, any, any>;\n};\n\nconst PlatformHeaderView = (props: PlatformDataProps) => {\n  let platformSpecificHeader;\n\n  const platformResult = props.platformData.getPlatformResult();\n\n  const portfolioResult = props.platformData.getPortfolioResult();\n\n  let portfolioResultTooltips = {};\n  if (props.platformData instanceof MintosPlatform) {\n    platformSpecificHeader = <MintosSpecificHeaderView platformResult={platformResult} />;\n    portfolioResultTooltips = {\n      deposit: 'Vklady + Příchozí směnná transakce',\n      withdrawal: 'Vklady + Odchozí směnná transakce',\n      principalReceived: 'Neimplementovano',\n      interestReceived: 'Přijaté úroky + Obdržené poplatky z prodlení',\n      feesPaid: 'Poplatek za obchod na sekundárním trhu  + Poplatek směnárny',\n      extraReceived: 'Bonus za doporučení příteli + Cashback bonus'\n    };\n  } else if (props.platformData instanceof TwinoPlatform) {\n    platformSpecificHeader = <TwinoSpecificHeaderView platformResult={platformResult} />;\n    portfolioResultTooltips = {\n      principalReceived: 'Neimplementovano',\n      interestReceived: 'Přijaté úroky + Obdržené poplatky z prodlení'\n    };\n  } else if (props.platformData instanceof ZonkyPlatform) {\n    platformSpecificHeader = <ZonkySpecificHeaderView platformResult={platformResult} />;\n    portfolioResultTooltips = {\n      principalReceived: 'Splátka půjčky + prodej na sekundárním trhu',\n      interestReceived: 'Přijaté úroky + pokuty',\n      feesPaid: 'Poplatek za investování + za prodej na sekundárním trhu'\n    };\n  }\n  return (\n    <div>\n      <Grid container={true}>\n        <Grid item={true} xs={1} />\n        <Grid item={true} xs={5}>\n          <PortfolioHeaderView portfolioResult={portfolioResult} tooltips={portfolioResultTooltips} />\n        </Grid>\n        <Grid item={true} xs={6}>\n          {platformSpecificHeader}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default PlatformHeaderView;\n","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport React from 'react';\n\nimport { IOneMonthPortfolioResult } from '../core/platforms/models';\n\ntype ResultTableProps = {\n  monthlyPortfolioResults: IOneMonthPortfolioResult[];\n};\n\nfunction renderTableHeader() {\n  const columnNames = ['Datum', 'Vklady', 'Výběry', 'Příjaté zisky', 'Zaplacené poplatky', 'Extra odměny'].map((value, index) => {\n    return (\n      <TableCell key={index} align=\"center\" variant=\"head\">\n        {' '}\n        {value}{' '}\n      </TableCell>\n    );\n  });\n  return <TableRow>{columnNames}</TableRow>;\n}\n\nfunction renderTableData(props: ResultTableProps) {\n  if (props.monthlyPortfolioResults.length > 0) {\n    return props.monthlyPortfolioResults.map((month: IOneMonthPortfolioResult, index: number) => {\n      return (\n        <TableRow key={index} hover={true}>\n          <TableCell component=\"th\" scope=\"row\" align=\"center\" style={{ width: '12%' }}>\n            {month.month.format('MMM YYYY')}\n          </TableCell>\n          <TableCell align=\"right\" style={{ width: '18%' }}>\n            {month.result.deposit ? month.result.deposit.toFormat() : ''}\n          </TableCell>\n          <TableCell align=\"right\" style={{ width: '18%' }}>\n            {month.result.withdrawal ? month.result.withdrawal.toFormat() : ''}\n          </TableCell>\n          <TableCell align=\"right\" style={{ width: '18%' }}>\n            {month.result.interestReceived ? month.result.interestReceived.toFormat() : ''}\n          </TableCell>\n          <TableCell align=\"right\" style={{ width: '17%' }}>\n            {month.result.feesPaid ? month.result.feesPaid.toFormat() : ''}\n          </TableCell>\n          <TableCell align=\"right\" style={{ width: '17%' }}>\n            {month.result.extraReceived ? month.result.extraReceived.toFormat() : ''}\n          </TableCell>\n        </TableRow>\n      );\n    });\n  } else {\n    return (\n      <TableRow>\n        <TableCell />\n        <TableCell />\n        <TableCell />\n        <TableCell />\n        <TableCell />\n        <TableCell />\n      </TableRow>\n    );\n  }\n}\n\nconst ResultTable = (props: ResultTableProps) => {\n  return (\n    <div>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        <TableHead>{renderTableHeader()}</TableHead>\n        <TableBody>{renderTableData(props)}</TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ResultTable;\n","import React from 'react';\n\nimport { SupportedPlatform } from '../core/platforms/models';\n\nimport PlatformHeaderView from './PlatformHeaderView';\nimport ResultTable from './ResultTable';\n\nexport type PlatformDataProps = {\n  platformData: SupportedPlatform;\n};\n\nconst PlatformView = (props: PlatformDataProps) => {\n  const monthlyPortfolioResults = props.platformData.getMonthlyPortfolioResults();\n\n  return (\n    <div>\n      <PlatformHeaderView platformData={props.platformData} />\n      <hr />\n      <ResultTable monthlyPortfolioResults={monthlyPortfolioResults} />\n    </div>\n  );\n};\n\nexport default PlatformView;\n","import Button from '@material-ui/core/Button';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { MouseEvent, useState } from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    button: {\n      margin: theme.spacing(4)\n    },\n    input: {\n      display: 'none'\n    }\n  })\n);\n\ntype ForexRateInputProps = {\n  setForexRateValue: (value: number) => void;\n};\n\nconst ForexRateInput = (props: ForexRateInputProps) => {\n  const [forexRateInputError, setForexRateInputError] = useState('');\n  const [forexRate, setForexRate] = useState('0.0');\n\n  const classes = useStyles();\n\n  const onButtonClick = (e: MouseEvent) => {\n    e.preventDefault();\n    const result = parseFloat(forexRate);\n    if (Number.isNaN(result) || result <= 0) {\n      setForexRateInputError('Musi byt kladne cislo');\n    } else {\n      setForexRateInputError('');\n      props.setForexRateValue(result);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Zadejte svůj kurz EUR-CZK</h3>1 EUR = ? CZK:\n      <form className={classes.container} noValidate={true} autoComplete=\"off\">\n        <TextField\n          id=\"outlined-basic\"\n          className={classes.textField}\n          error={forexRateInputError ? true : false}\n          helperText={forexRateInputError}\n          margin=\"normal\"\n          onChange={(event: any) => {\n            setForexRate(event.target.value);\n          }}\n          variant=\"outlined\"\n          type=\"number\"\n          value={forexRate}\n        />\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} size=\"small\" type=\"submit\" onClick={onButtonClick}>\n          Zadat kurz\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForexRateInput;\n","import Grid from '@material-ui/core/Grid';\nimport React, { useState } from 'react';\n\nimport { Currency } from '../common/enums';\nimport { IOneMonthPortfolioResult } from '../core/platforms/models';\nimport { getNewPortfolioResultFactory, getPortfolioResultWithOptionalForexConversion } from '../core/platforms/utils';\n\nimport ForexRateInput from './ForexRateInput';\nimport { PortfolioPlatformsProps } from './PlatformsTabMenuView';\nimport PortfolioHeaderView from './PortfolioHeaderView';\nimport ResultTable from './ResultTable';\n\nconst PortfolioView = (props: PortfolioPlatformsProps) => {\n  const [forexRate, setForexRate] = useState(0.0);\n\n  const setForexRateValue = (value: number) => {\n    setForexRate(value);\n  };\n\n  let portfolioHeader;\n  let portfolioResultTable;\n  let forexRateInput;\n\n  if (props.portfolioPlatforms.length > 0) {\n    let portfolioCurrency = props.portfolioPlatforms[0].currency;\n    let isCurrencyConversionNeeded = false;\n\n    for (const platform of props.portfolioPlatforms) {\n      if (portfolioCurrency !== platform.currency) {\n        isCurrencyConversionNeeded = true;\n        break;\n      }\n    }\n\n    if (isCurrencyConversionNeeded) {\n      portfolioCurrency = Currency.CZK;\n      forexRateInput = <ForexRateInput setForexRateValue={setForexRateValue} />;\n    }\n\n    let portfolioResult = getNewPortfolioResultFactory(portfolioCurrency);\n    let monthlyPortfolioResults: IOneMonthPortfolioResult[] = [];\n\n    if (!isCurrencyConversionNeeded || forexRate) {\n      [portfolioResult, monthlyPortfolioResults] = getPortfolioResultWithOptionalForexConversion(\n        props.portfolioPlatforms,\n        portfolioCurrency,\n        forexRate\n      );\n    }\n\n    portfolioHeader = (\n      <Grid container={true}>\n        <Grid item={true} xs={1} />\n        <Grid item={true} xs={5}>\n          <PortfolioHeaderView portfolioResult={portfolioResult} tooltips={{}} />\n        </Grid>\n        <Grid item={true} xs={6}>\n          {forexRateInput}\n        </Grid>\n      </Grid>\n    );\n\n    portfolioResultTable = <ResultTable monthlyPortfolioResults={monthlyPortfolioResults || []} />;\n  }\n\n  return (\n    <div>\n      {portfolioHeader ? portfolioHeader : 'Nahrajte výpisy z účtu k zobrazení statistik z jednotlivých platforem.'}\n\n      {portfolioResultTable ? <hr /> : undefined}\n      {portfolioResultTable}\n    </div>\n  );\n};\n\nexport default PortfolioView;\n","import Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useEffect, useState } from 'react';\n\nimport { SupportedPlatform, SupportedPlatformTypes } from '../core/platforms/models';\n\nimport PlatformView from './PlatformView';\nimport PortfolioView from './PortfolioView';\n\nexport type PortfolioPlatformsProps = {\n  portfolioPlatforms: (SupportedPlatform)[];\n};\n\ninterface ITabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: ITabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={4}>{children}</Box>\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tabEnabled: {\n      fontSize: '96%',\n      fontWeight: 'bold',\n      textTransform: 'none'\n    },\n    tabDisabled: {\n      textTransform: 'none'\n    }\n  })\n);\n\nconst PlatformsTabMenuView = (props: PortfolioPlatformsProps) => {\n  const tabs = ['Portfolio', SupportedPlatformTypes.ZONKY, SupportedPlatformTypes.MINTOS, SupportedPlatformTypes.TWINO];\n\n  const [tabIndexValue, setTabIndexValue] = useState(0);\n  const onTabChange = (event: React.ChangeEvent<{}>, newTabIndexValue: number) => {\n    setTabIndexValue(newTabIndexValue);\n  };\n\n  useEffect(() => {\n    let focus = 0;\n    for (const platform of props.portfolioPlatforms) {\n      focus = tabs.indexOf(platform.platform);\n    }\n    setTabIndexValue(focus);\n  }, [tabs, props.portfolioPlatforms.length, props.portfolioPlatforms]);\n\n  const classes = useStyles();\n\n  const platformViews: any = {};\n\n  for (const platform of props.portfolioPlatforms) {\n    platformViews[platform.platform] = <PlatformView platformData={platform} />;\n  }\n\n  const availablePlatforms = Object.keys(platformViews);\n\n  const zonkyEnabled = availablePlatforms.includes(SupportedPlatformTypes.ZONKY);\n  const mintosEnabled = availablePlatforms.includes(SupportedPlatformTypes.MINTOS);\n  const twinoEnabled = availablePlatforms.includes(SupportedPlatformTypes.TWINO);\n\n  return (\n    <div>\n      <Paper square={true}>\n        <Tabs value={tabIndexValue} onChange={onTabChange} aria-label=\"simple tabs example\" variant=\"fullWidth\">\n          <Tab className={classes.tabEnabled} label=\"Souhrn celého portfolia\" {...a11yProps(0)} />\n          <Tab\n            className={zonkyEnabled ? classes.tabEnabled : classes.tabDisabled}\n            label=\"Detail Zonky.cz (CZK)\"\n            {...a11yProps(1)}\n            disabled={!zonkyEnabled}\n          />\n          <Tab\n            className={mintosEnabled ? classes.tabEnabled : classes.tabDisabled}\n            label=\"Detail Mintos.com (EUR)\"\n            {...a11yProps(2)}\n            disabled={!mintosEnabled}\n          />\n          <Tab\n            className={twinoEnabled ? classes.tabEnabled : classes.tabDisabled}\n            label=\"Detail Twino.eu (EUR)\"\n            {...a11yProps(3)}\n            disabled={!twinoEnabled}\n          />\n        </Tabs>\n      </Paper>\n\n      <div style={{ paddingTop: '8px' }}>\n        <Paper square={true}>\n          <TabPanel value={tabIndexValue} index={0}>\n            <PortfolioView portfolioPlatforms={props.portfolioPlatforms} />\n          </TabPanel>\n          <TabPanel value={tabIndexValue} index={1}>\n            {platformViews[SupportedPlatformTypes.ZONKY]}\n          </TabPanel>\n          <TabPanel value={tabIndexValue} index={2}>\n            {platformViews[SupportedPlatformTypes.MINTOS]}\n          </TabPanel>\n          <TabPanel value={tabIndexValue} index={3}>\n            {platformViews[SupportedPlatformTypes.TWINO]}\n          </TabPanel>\n        </Paper>\n      </div>\n    </div>\n  );\n};\n\nexport default PlatformsTabMenuView;\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport { loadSelectedFile } from '../common/utils';\n\nimport { FileUploadInputProps } from './App';\nimport './UploadFilesInput.css';\n\nclass UploadFilesInput extends React.Component<FileUploadInputProps> {\n  public onLoadHandler(event: any, filename: string) {\n    ReactGA.event({\n      category: 'FileUpload',\n      action: 'Choose file'\n    });\n    this.props.onRawFileUploaded(event.target.result, filename);\n  }\n\n  public onFileInputChange(event: any) {\n    const files = event.target.files;\n\n    this.onLoadHandler = this.onLoadHandler.bind(this);\n    for (const file of files) {\n      loadSelectedFile(file, this.onLoadHandler);\n    }\n  }\n\n  public render() {\n    return (\n      <div id=\"choose_file\">\n        <input\n          type=\"file\"\n          disabled={!this.props.uploadEnabled}\n          multiple={true}\n          onChange={e => {\n            this.onFileInputChange(e);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default UploadFilesInput;\n","import AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nimport { MintosPlatform } from '../core/platforms/MintosPlatform';\nimport { SupportedPlatform, SupportedPlatformTypes } from '../core/platforms/models';\nimport { TwinoPlatform } from '../core/platforms/TwinoPlatform';\nimport { detectPlatform } from '../core/platforms/utils';\nimport { ZonkyPlatform } from '../core/platforms/ZonkyPlatform';\n\nimport './App.css';\nimport DragAndDropFilesInput from './DragAndDropFilesInput';\nimport PlatformsTabMenuView from './PlatformsTabMenuView';\nimport UploadFilesInput from './UploadFilesInput';\n\nexport type FileUploadInputProps = {\n  onRawFileUploaded: (rawFile: ArrayBuffer, filename: string) => void;\n  uploadEnabled: boolean;\n};\n\ninterface INewRawFile {\n  filename: string;\n  rawFile: ArrayBuffer;\n}\n\ntype AppState = {\n  newRawFiles: INewRawFile[];\n  portfolioPlatforms: (SupportedPlatform)[];\n  uploadEnabled: boolean;\n};\n\nclass App extends React.Component<{}, AppState> {\n  public state = { newRawFiles: [], portfolioPlatforms: [], uploadEnabled: true };\n\n  public handleUploadedRawFile(rawFile: ArrayBuffer, filename: string) {\n    this.setState(prevState => ({\n      newRawFiles: [...prevState.newRawFiles, { filename, rawFile }],\n      uploadEnabled: false\n    }));\n  }\n\n  public componentDidUpdate() {\n    setTimeout(this.processNewRawFile, 900);\n  }\n\n  public render() {\n    let statementsInfo;\n    if (this.state.newRawFiles.length > 0) {\n      statementsInfo = 'Soubory se zpracovávají... (může to trvat déle, vyčkejte)';\n    } else {\n      statementsInfo = `Úspěšné zpracovaných výpisů z platforem: ${this.state.portfolioPlatforms.length}`;\n    }\n\n    return (\n      <div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/WojtylaCZ/p2folio\"\n            className=\"github-corner\"\n            aria-label=\"View source on GitHub\"\n          >\n            <svg\n              width={80}\n              height={80}\n              viewBox=\"0 0 250 250\"\n              style={{ fill: '#151513', color: '#fff', position: 'absolute', top: 0, border: 0, right: 0, zIndex: 1 }}\n              aria-hidden=\"true\"\n            >\n              <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n              <path\n                d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n                fill=\"currentColor\"\n                style={{ transformOrigin: '130px 106px' }}\n                className=\"octo-arm\"\n              />\n              <path\n                d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n                fill=\"currentColor\"\n                className=\"octo-body\"\n              />\n            </svg>\n          </a>\n          <style\n            dangerouslySetInnerHTML={{\n              __html:\n                '.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}'\n            }}\n          />\n        </div>\n\n        <div>\n          <AppBar position=\"static\" style={{ zIndex: -1 }}>\n            <div className=\"content\">\n              <Toolbar style={{ padding: '0' }}>\n                <Typography variant=\"h6\">P2folio - BETA verze</Typography>\n              </Toolbar>\n            </div>\n          </AppBar>\n        </div>\n\n        <div className=\"content\">\n          <p>\n            <b>P2folio sjednocuje data z různých P2P platforem pro kompaktní statistiky a přehled celého portfolia.</b>\n          </p>\n          <p>\n            Ocením jakékoliv komentáře, návrhy nebo hlášení chyb. Třeba v této&nbsp;\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/groups/1813432205553867\">\n              facebookové skupině pro P2P investory\n            </a>\n            &nbsp;nebo na{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/WojtylaCZ/p2folio\">\n              GitHubu\n            </a>\n            .\n          </p>\n\n          <p>Statistiky ze získají z výpisů z účtu z jednotlivých platforem. Jak je získat:</p>\n\n          <ul id=\"upload_tutorials\">\n            <li>\n              {' '}\n              <a href=\"https://www.zonky.cz\" target=\"_blank\" rel=\"noopener noreferrer\">\n                {' '}\n                Zonky.cz\n              </a>{' '}\n              - pro zobrazení dat z platformy se přihlaste do svého účtu, klikněte na záložky \"X Kč máte k investování\" nebo\n              \"Zobrazit peněženku\" a na této stránce dole vyberte možnost \"Exportovat výpisy z účtu\". Stáhněte daný soubor dle\n              intrukcí a nahrajte je sem.\n            </li>\n            <li>\n              <a href=\"https://www.mintos.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                {' '}\n                Mintos.com\n              </a>{' '}\n              - otevřete záložku \"Account Statement\" ve vašem účtě a vyberte měnu EUR (zatím jediná podporovaná). Pro \"Start Date\"\n              zvolete nějaké datum dávno v minulosti - například (např. 11.12.2013) a klikněte na \"Search\". Pod tabulkou s\n              celkovým přehledem je tlačítko \"Download Selected List\". Stáhněte daný soubor a naimportujte jej sem.\n            </li>\n            <li>\n              {' '}\n              <a href=\"https://www.twino.eu\" target=\"_blank\" rel=\"noopener noreferrer\">\n                {' '}\n                Twino.eu\n              </a>{' '}\n              - přihlaste do svého účtu, klikněte na záložku \"My Investment\" a následně na \"Account Statement\". Pro \"Start Date\"\n              filtr zadejte nějaký den dávno v minulosti (např. 11.12.2013) a vyčkejte až se nahrají data. Klikně na tlačítko\n              \"Download\". Stáhněte daný soubor a nahrajte jej sem.\n            </li>\n            <li> Jakou další platformu?</li>\n          </ul>\n\n          <p>\n            <b>\n              Data jsou zpracována pouze ve vašem prohlížeči. Nikam se neodesílají, služba nemá žádnou další část.\n              <br />\n              Jakmile stránku aktualizujete, všechna data jsou ztracena.\n            </b>\n          </p>\n\n          <div className=\"paper\">\n            <Paper square={true}>\n              <Grid container={true}>\n                <Grid item={true} xs={6}>\n                  <UploadFilesInput\n                    uploadEnabled={this.state.uploadEnabled}\n                    onRawFileUploaded={(rawfile, filename) => this.handleUploadedRawFile(rawfile, filename)}\n                  />\n                </Grid>\n                <Grid item={true} xs={6}>\n                  <DragAndDropFilesInput\n                    uploadEnabled={this.state.uploadEnabled}\n                    onRawFileUploaded={(rawfile, filename) => this.handleUploadedRawFile(rawfile, filename)}\n                  />\n                </Grid>\n                <Grid item={true} xs={12}>\n                  <Paper id=\"statements_info\" square={true}>\n                    <b>{statementsInfo} </b>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Paper>\n          </div>\n\n          <div className=\"paper\" style={{ paddingTop: '30px' }}>\n            <PlatformsTabMenuView portfolioPlatforms={this.state.portfolioPlatforms} />\n          </div>\n\n          <div className=\"paper\" style={{ paddingTop: '30px' }}>\n            <Paper id=\"footer\" square={true} style={{ padding: '5px' }}>\n              2019 @ Vojtech Uhlir\n            </Paper>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private processNewRawFile = () => {\n    if (this.state.newRawFiles.length > 0) {\n      const { filename, rawFile } = this.state.newRawFiles[0];\n      try {\n        const platformType = detectPlatform(filename);\n        let platformData: SupportedPlatform;\n\n        switch (platformType) {\n          case SupportedPlatformTypes.MINTOS:\n            platformData = new MintosPlatform();\n            break;\n          case SupportedPlatformTypes.TWINO:\n            platformData = new TwinoPlatform();\n            break;\n          case SupportedPlatformTypes.ZONKY:\n            platformData = new ZonkyPlatform();\n            break;\n          default:\n            throw Error('unknown platform');\n        }\n\n        ReactGA.event({\n          category: 'PlatformUsed',\n          action: platformData.platform\n        });\n\n        platformData.parseASFile(rawFile);\n        platformData.processTransactions();\n\n        this.setState(prevState => ({\n          newRawFiles: prevState.newRawFiles.slice(1, prevState.newRawFiles.length),\n          portfolioPlatforms: [...prevState.portfolioPlatforms, platformData],\n          uploadEnabled: true\n        }));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport App from './components/App';\n\nReactGA.initialize('UA-149846559-1');\nReactGA.pageview(window.location.pathname);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}